<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- 다음 base-package에 있는 클래스들을 빈으로 생성 -->
	<context:component-scan base-package="com.javalab.dao, 
										com.javalab.service"></context:component-scan>
	<!-- <context:component-scan base-package="com.javalab.spring.login.dao, 
										com.javalab.spring.login.service"></context:component-scan> -->

	<!-- AOP를 어노테이션 방식으로 사용하겠다고 선언 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!--context:property-placeholder :properties파일 읽어오는 역할  -->
	<!-- <context:property-placeholder location="/WEB-INF/config/database.properties" /> -->

	<!-- [1] DataSource 설정 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:orcl"></property>
		<property name="username" value="board"></property>
		<property name="password" value="1234"></property>
	</bean>
	
	<!-- [2] Spring JdbcTemplate 설정(위에서 만든 dataSource 주입됨)  -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- [3] Transaction 매니저 등록 -->
	<!-- <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean> -->
	
	<!-- [4] Transaction 관리 어드바이스 설정 -->
	<!-- 1. 스프링 트랜잭션 관리 기능의 Advice 클래스는 개발자가 직접 구현하지 않으며 
                 스프링 컨테이너가 <tx:advice> 설정을 참조하여 자동 생성.
         2. 따라서 개발자는 어떤 클래스를 이용하여 advice 객체가 만들어지고,
                 그 내부에 어떤 메서드가 존재하는지 알 수 없음.
        3. 다만 생성되는 어드바이스의 아이디를 id 속성으로 지정하고
                 어드바이스 객체가 사용할 트랜잭션 관리자를 transaction-manager 속성으로 지정할 뿐임. 
        4. 이 설정은 "txAdvice"라는 어드바이스가 앞에서 설정한 txManager를 이용하여 
                 트랜잭션을 관리한다는 설정이다.
        5. <tx:attributes>의 자식 엘리먼트로 <tx:method> 엘리먼트를 이용하여
                 트랜잭션을 적용할 메소드를 지정할 수 있다.
        6. get으로 시작하는 모든 메소드는 "읽기전용"으로 처리되어 트랜잭션 관리 대상에서 제외하고
                 나머지 메소드들은 트랜잭션 관리에 포함한 것이다.                  
    -->		
	<!-- <tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			[트랜잭션 적용 메소드] get으로 시작하는 모든 메서드는 수정/삭제/추가 기능 아니므로
          		read-only="true"을 설정함으로써 트랜잭션 관리대상에서 제외
			<tx:method name="get*" read-only="true"/> 
			<tx:method name="*"/> get 외의 모든 메서드를 트랜잭션 관리 대상으로 지정
		</tx:attributes>
	</tx:advice>
	
	[5] Transaction Advisor 설정
	<aop:config>
		포인트컷 설정
		<aop:pointcut id="txPointcut" expression="execution(* com.javalab.spring..*Impl.*(..))" />
		aspect 설정(aop:aspect와 같은 역할)
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config> -->
	
</beans>



<!-- DataSource Configuration 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:XE"></property>
		<property name="username" value="freeflux"></property>
		<property name="password" value="free"></property>
	</bean>
	
	Transaction Registration
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
-->

<!-- DataSource Configuration : "org.springframework.jdbc.core.JdbcTemplate"

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:XE"></property>
		<property name="username" value="freeflux"></property>
		<property name="password" value="free"></property>
	</bean>
	
	Spring JdbcTemplate Configuration
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
 -->
