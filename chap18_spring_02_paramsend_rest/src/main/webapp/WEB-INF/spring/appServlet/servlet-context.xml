<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Spring MVC 컴포넌트들인 HandlerMapping과 HandlerAdapter를 Bean으로 등록 -->
	<!-- 예외처리 관련 @ControllerAdvice @ExceptionHandler 인식 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- 특정 패키지 내의 클래스를 스캔하고 @Component @Controller @Service @Repository을 확인한 후 Bean 인스턴스로 생성 -->
	<!-- 이를 이용하면 @Autowired와 @Qualifier Annotation을 인식할 수 있다. -->
	<context:component-scan base-package="com.javalab.controller, com.javalab.exception" />
	<!-- <context:component-scan base-package="com.javalab.spring.login.controller" /> -->

	<!-- 정적 자원(이미지,CSS,JS)에 대한 요청이 오면 특정 위치로 매핑해주는 역할 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- 뷰리졸버 Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>	
	
	<!-- File Upload Configuration : CommonsMultipartResolver -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10000000"></beans:property>
	</beans:bean>	

</beans:beans>