<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
	<persistence-unit name="chap33_01_jap_project">
		<class>com.javalab.chap33_01_jap_project.Board</class>
		<!-- 엔티티 클래스들에 대한 영속성 관리에 필요한 속성들을 설정 -->
		<properties>
			<!-- 필수 속성으로 주로 DB관련 설정, 스프링과 연동될 때는 root-context.xml에 디비 설정이 있으므로 생략될 수도 있다. -->
			<property name="javax.persistence.jdbc.driver" value="oracle.jdbc.driver.OracleDriver" />
			<property name="javax.persistence.jdbc.user" value="board" />
			<property name="javax.persistence.jdbc.password" value="1234" />
			<property name="javax.persistence.jdbc.url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe" />
			<!-- 다이얼렉트 설정 - 데이터베이스 종류별로 그에 맞는 쿼리문을 생성해주는 역할 -->
			<property name="hibernate.dialect" value="org.hibernate.dialect.Oracle12cDialect" />
			<!-- 하이버네이트 관련 속성 설정  -->
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.format_sql" value="true" />
			<property name="hibernate.use_sql_comments" value="false" />
			<property name="hibernate.id.new_generator_mappings" value="true" />
			<!-- DDL 명령어 create/create-drop/update
				- create : 기존 테이블 삭제하고 새로운 테이블 생성[어플 개발 초기에 사용, 상용서비스 에서는 절대 금지]
				- create-drop : create와 동일하나 어플 실행 종료전 테이블 삭제
				- update : 기존 테이블이 있으면 그냥 사용, 만약 엔티티 클래스의 설정이 변경되면 그 부분만 반영[상용서비스시 사용]
			 -->
			<property name="hibernate.hbm2ddl.auto" value="create" />
		</properties>		
	</persistence-unit>
</persistence>
