<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:component-scan
		base-package="com.javalab.dao, com.javalab.service"></context:component-scan>

	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="jdbcUrl"
			value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="board" />
		<property name="password" value="1234" />
	</bean>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>

	<!-- 매퍼 인터페이스 설정 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.javalab.dao"></property>
	</bean>

	<!-- [SqlSessionFactoryBean] mybatis main config - SqlMapConfig.xml(typeAliases) -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation"
			value="classpath:/config/sqlMapConfig.xml"></property>
		<!-- 런타임 시 SqlSessionFactory에 mybatis mapper 파일들의 경로가 설정된다. -->
		<property name="mapperLocations"
			value="classpath:/mapper/oracle/*Mapper.xml"></property>
	</bean>

	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>

	<!-- [2] 선언적 트랜잭션 설정 Transaction 매니저 등록 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<!-- [트랜잭션 적용 메소드] get으로 시작하는 모든 메서드는 수정/삭제/추가 기능 아니므로 read-only="true"을 
				설정함으로써 트랜잭션 관리대상에서 제외 -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" /> <!-- get 외의 모든 메서드를 트랜잭션 관리 대상으로 지정 -->
		</tx:attributes>
	</tx:advice>

	<!-- [5] Transaction Advisor 설정 -->
	<aop:config>
		<!-- 포인트컷 설정 -->
		<aop:pointcut id="txPointcut"
			expression="execution(* com.javalab.service.*Impl.*(..))" />
		<!-- aspect 설정(aop:aspect와 같은 역할) -->
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="txPointcut" />
	</aop:config>
</beans>
