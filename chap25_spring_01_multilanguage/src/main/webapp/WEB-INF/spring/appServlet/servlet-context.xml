<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Spring MVC 컴포넌트들인 HandlerMapping과 HandlerAdapter를 Bean으로 등록 -->
	<!-- 예외처리 관련 @ControllerAdvice @ExceptionHandler 인식 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- 특정 패키지 내의 클래스를 스캔하고 @Component @Controller @Service @Repository을 확인한 후 Bean 인스턴스로 생성 -->
	<!-- 이를 이용하면 @Autowired와 @Qualifier Annotation을 인식할 수 있다. -->
	<context:component-scan base-package="com.javalab.controller" />
	<!-- <context:component-scan base-package="com.javalab.spring.login.controller" /> -->

	<!-- 정적 자원(이미지,CSS,JS)에 대한 요청이 오면 특정 위치로 매핑해주는 역할 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- 뷰리졸버 Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>	

	<!-- 로그인 인터셉터 Start -->
	<beans:bean id="loginInterceptor" class="com.javalab.interceptor.LoginInterceptor">
	</beans:bean>	
	<!-- Interceptor 설정 -->
	<mvc:interceptors>
	    <mvc:interceptor>
	        <mvc:mapping path="/board/*.do"/>         
	        <mvc:exclude-mapping path="/resources/**"/>
	        <beans:ref bean="loginInterceptor"/>
	    </mvc:interceptor>
	</mvc:interceptors>
	<!-- 로그인 인터셉터 End -->
	
	<!-- Locale Configuration Start -->
	
	<!-- MessageSource Registration -->
	<!-- 메시지 소스를 읽어들여서 저장하게 될 메시지 소스 빈 객체  -->
 	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>message.messageSource</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- LocaleResolver Registration -->
	<!-- 사용자의 locale정보를 읽어들여서 그에 맞는 언어의 메시지를 적용한다. -->
 	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
	</beans:bean>	
	<!-- LocaleChangeInterceptor Registration -->
	<!-- 클라이언트에서 lang=ko 형태로 요청이 오면 이 객체가 인터셉트해서 국가 코드를 ko인 메시지 소스를 읽어들일 수 있게 해준다. -->
	<mvc:interceptors>
		<beans:bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<beans:property name="paramName" value="lang"/>
		</beans:bean>
	</mvc:interceptors>
	
	<!-- Locale Configuration End -->

	
</beans:beans>
